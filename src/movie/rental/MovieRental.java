/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movie.rental;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.ImageProducer;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.*;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
//import oracle.net.aso.o;

/**
 *
 * @author abooo
 */
public class MovieRental extends javax.swing.JFrame {

 /**
     * Creates new form MovieRental
     */
    public MovieRental() {
        initComponents();
        connection = getConnection();
        if (connection == null) {

            JOptionPane.showMessageDialog(this, "Connection Failed");

        } else {
            JOptionPane.showMessageDialog(this, "Connected");
            try {
                connection.setAutoCommit(false);
            } catch (SQLException ex) {
                Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
     
        setResizable(false);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);



        
         
    }

   public void paintComponent(Graphics g) {
        paintComponent(g);
        try {
            Image I= ImageIO.read(new File("photo-1518930012451-c848356194be.jpg"));
             g.drawImage(I, 0, 0, getWidth(), getHeight(), this);
            //  g.fillOval(20, 67, 15, 15);
        } catch (IOException ex) {
            Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
        }


}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DeleteButtonGroup = new javax.swing.ButtonGroup();
        SearchButtonGroup = new javax.swing.ButtonGroup();
        StartPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        AddPanel = new javax.swing.JPanel();
        information = new javax.swing.JPanel();
        dateinfo = new javax.swing.JPanel();
        DateOfRental = new javax.swing.JLabel();
        DateReleased = new javax.swing.JLabel();
        CustomerNameD = new javax.swing.JTextField();
        DateOfReturnTextField = new javax.swing.JTextField();
        DateOfReturn = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DateRent = new javax.swing.JCheckBox();
        DateOfRentalTextField1 = new javax.swing.JTextField();
        Movieinfo = new javax.swing.JPanel();
        Moviename = new javax.swing.JLabel();
        CategoryItem = new javax.swing.JComboBox<>();
        Rated = new javax.swing.JLabel();
        Length = new javax.swing.JLabel();
        Category = new javax.swing.JLabel();
        RatedTextField = new javax.swing.JTextField();
        LengthTextField = new javax.swing.JTextField();
        MovieNameTextField = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        Saved3 = new javax.swing.JButton();
        DeletePanel = new javax.swing.JPanel();
        BackD = new javax.swing.JButton();
        DeleteTextField = new javax.swing.JTextField();
        DeleteV = new javax.swing.JButton();
        CancelD = new javax.swing.JButton();
        DMovieName = new javax.swing.JLabel();
        DisplayPanel = new javax.swing.JPanel();
        BackDis = new javax.swing.JButton();
        ClearD = new javax.swing.JButton();
        DisplayA = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        DisplayTable = new javax.swing.JTable();
        SearchPanel = new javax.swing.JPanel();
        SearchTextField = new javax.swing.JTextField();
        BackS = new javax.swing.JButton();
        SearshFoeVideoTextField = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        STableV = new javax.swing.JTable();
        ClearD1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        SearchMessage = new javax.swing.JLabel();
        RentPanel = new javax.swing.JPanel();
        RentedPanels = new javax.swing.JPanel();
        RentedName = new javax.swing.JLabel();
        ReturnTF = new javax.swing.JTextField();
        DOfRental = new javax.swing.JLabel();
        DRented = new javax.swing.JLabel();
        DateOfRentalTF = new javax.swing.JTextField();
        DateRentedTF = new javax.swing.JTextField();
        MNRented = new javax.swing.JTextField();
        RentedReturn = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        CNameLabel = new javax.swing.JLabel();
        CIDRental = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        CNameRented1 = new javax.swing.JTextField();
        Rent = new javax.swing.JButton();
        BackD1 = new javax.swing.JButton();
        ReturnPanel = new javax.swing.JPanel();
        movienamel = new javax.swing.JLabel();
        moviename = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        BackRM = new javax.swing.JButton();
        SearchforCustomerpanel = new javax.swing.JPanel();
        BackSFC = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Customertable = new javax.swing.JTable();
        content = new javax.swing.JPanel();
        customernametextfield = new javax.swing.JTextField();
        customername = new javax.swing.JLabel();
        customersearch = new javax.swing.JButton();
        messageC = new javax.swing.JLabel();
        ClearD2 = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        Import = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Export = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        OperationMenu = new javax.swing.JMenu();
        AddNew = new javax.swing.JMenuItem();
        DeleteOne = new javax.swing.JMenuItem();
        SearshForVideo = new javax.swing.JMenuItem();
        RentVideo = new javax.swing.JMenuItem();
        ReturnVideo = new javax.swing.JMenuItem();
        SearshForCustomer = new javax.swing.JMenuItem();
        DiplayAll = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(950, 1000));
        setSize(new java.awt.Dimension(1000, 1000));
        getContentPane().setLayout(new java.awt.CardLayout());

        StartPanel.setBackground(jLabel1.getBackground());
        StartPanel.setAlignmentX(0.0F);
        StartPanel.setAlignmentY(0.0F);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/photo-1518930012451-c848356194be.jpg"))); // NOI18N
        jLabel1.setLabelFor(StartPanel);
        jLabel1.setAlignmentY(0.0F);
        jLabel1.setAutoscrolls(true);

        javax.swing.GroupLayout StartPanelLayout = new javax.swing.GroupLayout(StartPanel);
        StartPanel.setLayout(StartPanelLayout);
        StartPanelLayout.setHorizontalGroup(
            StartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        StartPanelLayout.setVerticalGroup(
            StartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, Short.MAX_VALUE)
        );

        getContentPane().add(StartPanel, "card6");

        AddPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Video", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 36), new java.awt.Color(0, 92, 63))); // NOI18N

        information.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(204, 204, 204), null, null));
        information.setMaximumSize(new java.awt.Dimension(850, 500));

        dateinfo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Date Information ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        DateOfRental.setText("Date Of Rental");

        DateReleased.setText("Customer Name");

        DateOfReturn.setText("Date Of Return");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/calendar.png"))); // NOI18N

        DateRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateRentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dateinfoLayout = new javax.swing.GroupLayout(dateinfo);
        dateinfo.setLayout(dateinfoLayout);
        dateinfoLayout.setHorizontalGroup(
            dateinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateinfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dateinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dateinfoLayout.createSequentialGroup()
                        .addComponent(DateOfRental, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DateOfRentalTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dateinfoLayout.createSequentialGroup()
                        .addComponent(DateReleased, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CustomerNameD, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateinfoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(DateRent))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateinfoLayout.createSequentialGroup()
                        .addComponent(DateOfReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DateOfReturnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        dateinfoLayout.setVerticalGroup(
            dateinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateinfoLayout.createSequentialGroup()
                .addGroup(dateinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateRent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dateinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateReleased, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustomerNameD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(dateinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateOfRental, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateOfRentalTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(dateinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateOfReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateOfReturnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        Movieinfo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Movie Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        Moviename.setText("Movie Name");

        CategoryItem.setEditable(true);
        CategoryItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Action", "Family", "Drama", "Horror", "Documentary", "Romance" }));

        Rated.setText("Rated");

        Length.setText("Length");

        Category.setText("Category");

        javax.swing.GroupLayout MovieinfoLayout = new javax.swing.GroupLayout(Movieinfo);
        Movieinfo.setLayout(MovieinfoLayout);
        MovieinfoLayout.setHorizontalGroup(
            MovieinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MovieinfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MovieinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Length, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Moviename, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Rated, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Category, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100)
                .addGroup(MovieinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RatedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MovieNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CategoryItem, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        MovieinfoLayout.setVerticalGroup(
            MovieinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MovieinfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MovieinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MovieinfoLayout.createSequentialGroup()
                        .addComponent(Moviename, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(Length, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(Rated, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MovieinfoLayout.createSequentialGroup()
                        .addComponent(MovieNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(LengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(RatedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(MovieinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CategoryItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Category, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout informationLayout = new javax.swing.GroupLayout(information);
        information.setLayout(informationLayout);
        informationLayout.setHorizontalGroup(
            informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dateinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Movieinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(300, 300, 300))
        );
        informationLayout.setVerticalGroup(
            informationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(Movieinfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateinfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/reply.png"))); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        Saved3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/plus-button.png"))); // NOI18N
        Saved3.setText("Add");
        Saved3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Saved3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddPanelLayout = new javax.swing.GroupLayout(AddPanel);
        AddPanel.setLayout(AddPanelLayout);
        AddPanelLayout.setHorizontalGroup(
            AddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddPanelLayout.createSequentialGroup()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Saved3, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(information, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        AddPanelLayout.setVerticalGroup(
            AddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddPanelLayout.createSequentialGroup()
                .addGroup(AddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(information, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Saved3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(AddPanel, "card8");

        DeletePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Delete Video", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 36), new java.awt.Color(0, 113, 91))); // NOI18N
        DeletePanel.setName(""); // NOI18N

        BackD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/reply.png"))); // NOI18N
        BackD.setText("Back");
        BackD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackDActionPerformed(evt);
            }
        });

        DeleteV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/trash-can.png"))); // NOI18N
        DeleteV.setText("Delete");
        DeleteV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteVActionPerformed(evt);
            }
        });

        CancelD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/remove-symbol.png"))); // NOI18N
        CancelD.setText("Cancel");

        DMovieName.setText("Movie Name");

        javax.swing.GroupLayout DeletePanelLayout = new javax.swing.GroupLayout(DeletePanel);
        DeletePanel.setLayout(DeletePanelLayout);
        DeletePanelLayout.setHorizontalGroup(
            DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeletePanelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackD, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DeletePanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(DeleteV, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(CancelD, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DeletePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(258, Short.MAX_VALUE))
        );
        DeletePanelLayout.setVerticalGroup(
            DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeletePanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DMovieName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 463, Short.MAX_VALUE)
                .addGroup(DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackD, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteV, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CancelD, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        getContentPane().add(DeletePanel, "card7");

        DisplayPanel.setMaximumSize(new java.awt.Dimension(850, 600));

        BackDis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/reply.png"))); // NOI18N
        BackDis.setText("Back");
        BackDis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackDisActionPerformed(evt);
            }
        });

        ClearD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/two-circling-arrows.png"))); // NOI18N
        ClearD.setText("Clear");
        ClearD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearDActionPerformed(evt);
            }
        });

        DisplayA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/computer-display.png"))); // NOI18N
        DisplayA.setText("Display");
        DisplayA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayAActionPerformed(evt);
            }
        });

        DisplayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Customer Name", "Movie Name", "Rented", "Rent Date", "return date", "Length", "Rated", "Category", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(DisplayTable);
        if (DisplayTable.getColumnModel().getColumnCount() > 0) {
            DisplayTable.getColumnModel().getColumn(9).setHeaderValue("");
        }

        javax.swing.GroupLayout DisplayPanelLayout = new javax.swing.GroupLayout(DisplayPanel);
        DisplayPanel.setLayout(DisplayPanelLayout);
        DisplayPanelLayout.setHorizontalGroup(
            DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DisplayPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(DisplayPanelLayout.createSequentialGroup()
                        .addComponent(BackDis, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(DisplayA, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ClearD, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 905, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        DisplayPanelLayout.setVerticalGroup(
            DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DisplayPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(DisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DisplayA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackDis, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(DisplayPanel, "card5");

        SearchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search For Video", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ebrima", 1, 24), new java.awt.Color(0, 106, 76))); // NOI18N

        SearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTextFieldActionPerformed(evt);
            }
        });

        BackS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/reply.png"))); // NOI18N
        BackS.setText("Back");
        BackS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackSActionPerformed(evt);
            }
        });

        SearshFoeVideoTextField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/search.png"))); // NOI18N
        SearshFoeVideoTextField.setText("Search");
        SearshFoeVideoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearshFoeVideoTextFieldActionPerformed(evt);
            }
        });

        STableV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie Name", "Rated", "Category", "length"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(STableV);

        ClearD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/two-circling-arrows.png"))); // NOI18N
        ClearD1.setText("Clear");
        ClearD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearD1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Movie Name:");

        SearchMessage.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        SearchMessage.setForeground(new java.awt.Color(255, 147, 112));

        javax.swing.GroupLayout SearchPanelLayout = new javax.swing.GroupLayout(SearchPanel);
        SearchPanel.setLayout(SearchPanelLayout);
        SearchPanelLayout.setHorizontalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 903, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(SearchPanelLayout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(SearchPanelLayout.createSequentialGroup()
                                    .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(210, 210, 210)
                                    .addComponent(SearchMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(BackS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(SearshFoeVideoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SearchPanelLayout.createSequentialGroup()
                        .addGap(317, 317, 317)
                        .addComponent(ClearD1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        SearchPanelLayout.setVerticalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(223, 223, 223)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearshFoeVideoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackS, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(ClearD1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(SearchPanel, "card3");

        RentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rented Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic Medium", 3, 24), new java.awt.Color(0, 61, 122))); // NOI18N

        RentedPanels.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/edit.png")))); // NOI18N

        RentedName.setText("Movie Name");

        ReturnTF.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ReturnTF.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        DOfRental.setText("Date Of Rental");

        DRented.setText("Date Rented");

        DateOfRentalTF.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        DateRentedTF.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        DateRentedTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateRentedTFActionPerformed(evt);
            }
        });

        MNRented.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RentedReturn.setText("Return Date");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1016, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 441, Short.MAX_VALUE)
        );

        CNameLabel.setText("Customer Name");

        CIDRental.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Customer ID");

        CNameRented1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout RentedPanelsLayout = new javax.swing.GroupLayout(RentedPanels);
        RentedPanels.setLayout(RentedPanelsLayout);
        RentedPanelsLayout.setHorizontalGroup(
            RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RentedPanelsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RentedPanelsLayout.createSequentialGroup()
                        .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DRented, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RentedReturn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DOfRental, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DateRentedTF)
                            .addComponent(ReturnTF)
                            .addComponent(DateOfRentalTF, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)))
                    .addGroup(RentedPanelsLayout.createSequentialGroup()
                        .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RentedName, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(70, 70, 70)
                        .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CNameRented1)
                            .addGroup(RentedPanelsLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(MNRented, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(RentedPanelsLayout.createSequentialGroup()
                                .addComponent(CIDRental, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(581, 581, 581)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RentedPanelsLayout.setVerticalGroup(
            RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RentedPanelsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RentedName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MNRented, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CNameRented1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RentedPanelsLayout.createSequentialGroup()
                        .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CIDRental, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DateRentedTF, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DRented, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RentedReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ReturnTF, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(RentedPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DateOfRentalTF)
                            .addComponent(DOfRental, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Rent.setText("Rent");
        Rent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RentActionPerformed(evt);
            }
        });

        BackD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/reply.png"))); // NOI18N
        BackD1.setText("Back");
        BackD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackD1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RentPanelLayout = new javax.swing.GroupLayout(RentPanel);
        RentPanel.setLayout(RentPanelLayout);
        RentPanelLayout.setHorizontalGroup(
            RentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackD1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Rent, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(RentedPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(195, Short.MAX_VALUE))
        );
        RentPanelLayout.setVerticalGroup(
            RentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Rent, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BackD1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(RentedPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(RentPanel, "card7");

        movienamel.setText("Movie name");

        jButton1.setText("return");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BackRM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/reply.png"))); // NOI18N
        BackRM.setText("Back");
        BackRM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackRMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ReturnPanelLayout = new javax.swing.GroupLayout(ReturnPanel);
        ReturnPanel.setLayout(ReturnPanelLayout);
        ReturnPanelLayout.setHorizontalGroup(
            ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReturnPanelLayout.createSequentialGroup()
                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReturnPanelLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(movienamel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ReturnPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(BackRM, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 267, Short.MAX_VALUE)
                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(moviename)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                .addGap(236, 236, 236))
        );
        ReturnPanelLayout.setVerticalGroup(
            ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReturnPanelLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movienamel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moviename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 341, Short.MAX_VALUE)
                .addGroup(ReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BackRM, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(132, 132, 132))
        );

        getContentPane().add(ReturnPanel, "card8");

        SearchforCustomerpanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search for customer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 24), new java.awt.Color(0, 102, 102))); // NOI18N

        BackSFC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/reply.png"))); // NOI18N
        BackSFC.setText("Back");
        BackSFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackSFCActionPerformed(evt);
            }
        });

        Customertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Customername", "Movie name", "Rent state", "Rent Date", "return state", "length", "Rated", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Customertable);

        content.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(51, 51, 51), null));

        customernametextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customernametextfieldActionPerformed(evt);
            }
        });

        customername.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        customername.setText("Customer Name :");

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(customername, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(customernametextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customernametextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        customersearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/search.png"))); // NOI18N
        customersearch.setText("Search");
        customersearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customersearchActionPerformed(evt);
            }
        });

        messageC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        messageC.setForeground(new java.awt.Color(255, 102, 102));

        ClearD2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/two-circling-arrows.png"))); // NOI18N
        ClearD2.setText("Clear");
        ClearD2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearD2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SearchforCustomerpanelLayout = new javax.swing.GroupLayout(SearchforCustomerpanel);
        SearchforCustomerpanel.setLayout(SearchforCustomerpanelLayout);
        SearchforCustomerpanelLayout.setHorizontalGroup(
            SearchforCustomerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchforCustomerpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchforCustomerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchforCustomerpanelLayout.createSequentialGroup()
                        .addComponent(BackSFC, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(customersearch, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ClearD2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SearchforCustomerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(SearchforCustomerpanelLayout.createSequentialGroup()
                            .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(messageC, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 865, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 100, Short.MAX_VALUE))
        );
        SearchforCustomerpanelLayout.setVerticalGroup(
            SearchforCustomerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchforCustomerpanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(SearchforCustomerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(messageC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(SearchforCustomerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchforCustomerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BackSFC, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(customersearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ClearD2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        getContentPane().add(SearchforCustomerpanel, "card9");

        FileMenu.setText("File    ");

        Import.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/export (1).png"))); // NOI18N
        Import.setText("Import");
        Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportActionPerformed(evt);
            }
        });
        FileMenu.add(Import);
        FileMenu.add(jSeparator1);

        Export.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/export.png"))); // NOI18N
        Export.setText("Export");
        Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportActionPerformed(evt);
            }
        });
        FileMenu.add(Export);

        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/opened-door-aperture.png"))); // NOI18N
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        FileMenu.add(Exit);

        MenuBar.add(FileMenu);

        OperationMenu.setText("Operation");
        OperationMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OperationMenuActionPerformed(evt);
            }
        });

        AddNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/add-list.png"))); // NOI18N
        AddNew.setMnemonic('A');
        AddNew.setText("Add a new video");
        AddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNewActionPerformed(evt);
            }
        });
        OperationMenu.add(AddNew);

        DeleteOne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/trash-can.png"))); // NOI18N
        DeleteOne.setText("Delete  a video");
        DeleteOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteOneActionPerformed(evt);
            }
        });
        OperationMenu.add(DeleteOne);

        SearshForVideo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/search.png"))); // NOI18N
        SearshForVideo.setText("Searsh for a vedio");
        SearshForVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearshForVideoActionPerformed(evt);
            }
        });
        OperationMenu.add(SearshForVideo);

        RentVideo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/rent.png"))); // NOI18N
        RentVideo.setText("Rent a video");
        RentVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RentVideoActionPerformed(evt);
            }
        });
        OperationMenu.add(RentVideo);

        ReturnVideo.setText("Return a video");
        ReturnVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnVideoActionPerformed(evt);
            }
        });
        OperationMenu.add(ReturnVideo);

        SearshForCustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/avatar (1).png"))); // NOI18N
        SearshForCustomer.setText("Searsh for a customer");
        SearshForCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearshForCustomerActionPerformed(evt);
            }
        });
        OperationMenu.add(SearshForCustomer);

        DiplayAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/computer-display.png"))); // NOI18N
        DiplayAll.setText("Display All");
        DiplayAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiplayAllActionPerformed(evt);
            }
        });
        OperationMenu.add(DiplayAll);

        MenuBar.add(OperationMenu);

        setJMenuBar(MenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportActionPerformed
        JFileChooser importFromFile;
        importFromFile = new JFileChooser();
        importFromFile.setFileSelectionMode(JFileChooser.FILES_ONLY);
       FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
       importFromFile.setFileFilter(filter);
        int show = importFromFile.showOpenDialog(this);
        if(show ==JFileChooser.APPROVE_OPTION)
        {
            try {

                    prepStatement=connection.prepareStatement("insert into movier values(?,?,?,?,?,?,?,?,?)");

                Scanner input = new Scanner(importFromFile.getSelectedFile());
                while(input.hasNext())
                {
                    String split[] = input.nextLine().split(" ");
                    prepStatement.setInt(1,Integer.parseInt(split[0]));
                     prepStatement.setString(2,split[1]);
                      prepStatement.setString(3,split[2]);
                       prepStatement.setString(4,split[3]);
                        prepStatement.setString(5,split[4]);
                        prepStatement.setInt(6,Integer.parseInt(split[5]));
                         prepStatement.setString(7,split[6]);
                         prepStatement.setString(8,split[7]);
                              prepStatement.setString(9,split[8]);
                              prepStatement.execute();

                } connection.commit();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
            }
                  catch (SQLException ex) {
                    Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
                }

        }
      //}  importFromFile.set
    }//GEN-LAST:event_ImportActionPerformed

    private void ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportActionPerformed
     
           JFileChooser exportFromFile;
        exportFromFile = new JFileChooser();
        exportFromFile.setFileSelectionMode(JFileChooser.FILES_ONLY);
       FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
       exportFromFile.setFileFilter(filter);
        int show = exportFromFile.showOpenDialog(this);
        if(show ==JFileChooser.APPROVE_OPTION)
        {
            File W = exportFromFile.getSelectedFile();

               try {
                   PrintWriter pw =new PrintWriter(W);


                   prepStatement= connection.prepareStatement("select * from movier");
                   resultSet = prepStatement.executeQuery();
                   while(resultSet.next())
                   {
                       
                       pw.print(resultSet.getInt(1)+" "+resultSet.getString(2)+ " "+resultSet.getString(3)+" "+resultSet.getString(4)+" "+resultSet.getString(5));
                        pw.print(resultSet.getInt(6)+ " "+resultSet.getString(7)+" "+resultSet.getString(8)+" "+resultSet.getString(9));
                        pw.println();
                   }


                   pw.flush();
               } catch (SQLException ex) {
                   Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
               }catch(Exception e)
               {

               }
               
        }
    }//GEN-LAST:event_ExportActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        try {
            if (connection != null) {
                connection.close();
//        prepStatement.close();
                // resultSet.close();
            }
            dispose();
        } catch (SQLException e) {

        }

    }//GEN-LAST:event_ExitActionPerformed

    private void DeleteOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteOneActionPerformed
        RentPanel.setVisible(false);
        ReturnPanel.setVisible(false);
        DisplayPanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
                StartPanel.setVisible(false);
        DeletePanel.setVisible(true);
    }//GEN-LAST:event_DeleteOneActionPerformed

    private void SearshForVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearshForVideoActionPerformed
        // TODO add your handling code here:
          RentPanel.setVisible(false);
        ReturnPanel.setVisible(false);
         DisplayPanel.setVisible(false);
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(true);
        AddPanel.setVisible(false);
                StartPanel.setVisible(false);
    }//GEN-LAST:event_SearshForVideoActionPerformed

    private void ReturnVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnVideoActionPerformed
         RentPanel.setVisible(false);
        ReturnPanel.setVisible(true);
         DisplayPanel.setVisible(false);
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
                StartPanel.setVisible(false);
    }//GEN-LAST:event_ReturnVideoActionPerformed

    private void OperationMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OperationMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OperationMenuActionPerformed

    private void AddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNewActionPerformed
         CustomerNameD.setEnabled(false);
                DateOfRentalTextField1.setEnabled(false);
                DateOfReturnTextField.setEnabled(false);
        RentPanel.setVisible(false);
        ReturnPanel.setVisible(false);
        StartPanel.setVisible(false);
        DisplayPanel.setVisible(false);
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(true);
       
      


    }//GEN-LAST:event_AddNewActionPerformed

    private void RentVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RentVideoActionPerformed
       RentPanel.setVisible(true);
        ReturnPanel.setVisible(false);
        StartPanel.setVisible(false);
        DisplayPanel.setVisible(false);
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
          SearchforCustomerpanel.setVisible(false);
    }//GEN-LAST:event_RentVideoActionPerformed

    private void SearshForCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearshForCustomerActionPerformed
        SearchforCustomerpanel.setVisible(true);
           RentPanel.setVisible(false);
        ReturnPanel.setVisible(false);
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
       
        DisplayPanel.setVisible(false);
        StartPanel.setVisible(false);
    }//GEN-LAST:event_SearshForCustomerActionPerformed

    private void DiplayAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiplayAllActionPerformed
        SearchforCustomerpanel.setVisible(false);
          RentPanel.setVisible(false);
        ReturnPanel.setVisible(false);
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
       
        DisplayPanel.setVisible(true);
        StartPanel.setVisible(false);
    }//GEN-LAST:event_DiplayAllActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        RentPanel.setVisible(false);
        ReturnPanel.setVisible(false);
        StartPanel.setVisible(true); 
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
        DisplayPanel.setVisible(false);// TODO add your handling code here:
         SearchforCustomerpanel.setVisible(false);
         MovieNameTextField.setText("");
         LengthTextField.setText("");
         RatedTextField.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void SearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchTextFieldActionPerformed

    private void BackDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackDActionPerformed
        DeleteTextField.setText("");
          RentPanel.setVisible(false);
        ReturnPanel.setVisible(false);
        StartPanel.setVisible(true);
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
        DisplayPanel.setVisible(false);
         SearchforCustomerpanel.setVisible(false);

    }//GEN-LAST:event_BackDActionPerformed

    private void BackSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackSActionPerformed
        RentPanel.setVisible(false);
         SearchMessage.setText("");
        ReturnPanel.setVisible(false);
        StartPanel.setVisible(true); 
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
        DisplayPanel.setVisible(false);// TODO add your handling code here:
         SearchforCustomerpanel.setVisible(false);
         SearchTextField.setText("");
    }//GEN-LAST:event_BackSActionPerformed

    private void BackDisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackDisActionPerformed
        DefaultTableModel TM = (DefaultTableModel)DisplayTable.getModel();
 int ro=TM.getRowCount();
        for(int i=0;i<ro;i++)
        {
            TM.removeRow(0);
        }
        RentPanel.setVisible(false);
        ReturnPanel.setVisible(false);
        StartPanel.setVisible(true);
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
        DisplayPanel.setVisible(false);// TODO add your handling code here:
         SearchforCustomerpanel.setVisible(false);
    }//GEN-LAST:event_BackDisActionPerformed

    private void Saved3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Saved3ActionPerformed
        try {
               
            if(MovieNameTextField.getText().equals("") || LengthTextField.getText().equals("") || RatedTextField.getText().equals("") || CategoryItem.getSelectedItem().equals(""))
            {
                JOptionPane.showMessageDialog(null, "You must fill the blank");
               return;
            }
            else{
            Saved3.setEnabled(true);
            prepStatement=connection.prepareStatement("select MovieName from movier where MovieName = ?");
            prepStatement.setString(1, MovieNameTextField.getText());
            resultSet = prepStatement.executeQuery();
            if(resultSet.next())
            {
                JOptionPane.showMessageDialog(null, " this Movie exist already");
                prepStatement.close();
                resultSet.close();
            }
            else{
                if(DateRent.isSelected()){

                }else
                {
            prepStatement = connection.prepareStatement("insert into movier(MovieName,lengthm,Rated,Categorys) values(?,?,?,?)");
            prepStatement.setString(1,MovieNameTextField.getText());
             prepStatement.setInt(2,Integer.parseInt(LengthTextField.getText()));
              prepStatement.setString(3,RatedTextField.getText());
               prepStatement.setString(4,(String)CategoryItem.getSelectedItem());
               prepStatement.execute();
               int addB = JOptionPane.showConfirmDialog(this, "would you like to add this movie");
               if(addB==JOptionPane.YES_OPTION)

               {
                   connection.commit();
               }
               else
               {
                   return;
               }
            } 
        }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_Saved3ActionPerformed

    private void BackD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackD1ActionPerformed
      RentPanel.setVisible(false);
        ReturnPanel.setVisible(false);
        StartPanel.setVisible(true);
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
        DisplayPanel.setVisible(false);
         SearchforCustomerpanel.setVisible(false);
    }//GEN-LAST:event_BackD1ActionPerformed

    private void RentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RentActionPerformed
        if(CIDRental.getText().equals("") || MNRented .getText().equals("") ||CNameRented1.getText().equals("")||DateRentedTF.getText().equals("")|| ReturnTF.getText().equals("")){
               JOptionPane.showMessageDialog(null, "please fill the blank");
        }else
        {
            try {
                prepStatement = connection.prepareStatement("select Rented from movier where MovieName = ?");
                prepStatement.setString(1, MNRented.getText());
                resultSet = prepStatement.executeQuery();
                if( resultSet.next() )
                {
                    
                   
                  //  System.out.println(resultSet.getString(1));
               String st= resultSet.getString("rented");
                if(st==null || st=="" ||st.equals("false"))
                {
                    prepStatement.close();
                    resultSet.close();
                    prepStatement =connection.prepareStatement("update movier set rented='true',IDC=?,Cname=?,returndate=?,renteddate=? where MovieName=?");
                    prepStatement.setInt(1, Integer.parseInt(CIDRental.getText()));
                    prepStatement.setString(2, CNameRented1.getText());
                    prepStatement.setString(3, ReturnTF.getText());
                    prepStatement.setString(4, DateOfRentalTF.getText());
                    prepStatement.setString(5, MNRented.getText());
                    prepStatement.execute();
                    int bR = JOptionPane.showConfirmDialog(null, "are u sure you want to rent this movie");
                    if(bR==JOptionPane.YES_NO_OPTION)
                    {
                        connection.commit();
                    }
                    else
                    {
                        return;
                    }
                }
                else
                        {
                             JOptionPane.showMessageDialog(null, "this movie is already rentd");
                             return;
                        }
                 }else
                {
                    JOptionPane.showMessageDialog(null, "this movie does not exist");
                }


            } catch (SQLException ex) {
                Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
            }


        }
    }//GEN-LAST:event_RentActionPerformed

    private void DateRentedTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateRentedTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateRentedTFActionPerformed

    private void customernametextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customernametextfieldActionPerformed
     
    }//GEN-LAST:event_customernametextfieldActionPerformed

    private void BackSFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackSFCActionPerformed
        // TODO add your handling code here:
            RentPanel.setVisible(false);
        ReturnPanel.setVisible(false);
        StartPanel.setVisible(true);
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
        DisplayPanel.setVisible(false);
        SearchforCustomerpanel.setVisible(false);
        ClearD2ActionPerformed(evt);
    }//GEN-LAST:event_BackSFCActionPerformed

    private void BackRMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackRMActionPerformed
        //     RentPanel.setVisible(false);
        ReturnPanel.setVisible(false);
        StartPanel.setVisible(true);
        DeletePanel.setVisible(false);
        SearchPanel.setVisible(false);
        AddPanel.setVisible(false);
        DisplayPanel.setVisible(false);
        SearchforCustomerpanel.setVisible(false);
    }//GEN-LAST:event_BackRMActionPerformed

    private void DeleteVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteVActionPerformed
        try {

            if(DeleteTextField.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Enter Movie Name");
                return;
            }
            else{
            prepStatement = connection.prepareStatement("select MovieName from movier where MovieName= ?");
          prepStatement.setString(1, DeleteTextField.getText());
             resultSet= prepStatement.executeQuery();
             if(resultSet.next())
             {
                 prepStatement.close();
                 prepStatement = connection.prepareStatement("delete from  movier where MovieName = ?");
                 prepStatement.setString(1,DeleteTextField.getText());
                 prepStatement.execute();
                 int DeleteB = JOptionPane.showConfirmDialog(null,"are u sure u want to delete this movie");
                 if(DeleteB==JOptionPane.YES_OPTION)
                 {
                     connection.commit();

                 }
                 else
                 {
                     return;
                 }

             }else
             {
                 JOptionPane.showMessageDialog(null, "this movie does not exist");
                 
             }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DeleteVActionPerformed

    private void SearshFoeVideoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearshFoeVideoTextFieldActionPerformed
        try {
            prepStatement= connection.prepareStatement("select MovieName from movier where MovieName= ?");
           prepStatement.setString(1, SearchTextField.getText());
           resultSet = prepStatement.executeQuery();
          if(resultSet.next())
          {
              prepStatement.close();
              resultSet.close();
              prepStatement = connection.prepareStatement("select MovieName,rated,Categorys,lengthm from movier where MovieName =? ");
              prepStatement.setString(1,SearchTextField.getText());
              resultSet=prepStatement.executeQuery();
              DefaultTableModel STable = (DefaultTableModel)STableV.getModel();
              Object O[] = new Object[4];

              int j = 1;
              if(resultSet.next())
              {
                  System.out.println(resultSet.getString(j));
             O[0]=resultSet.getObject(1);
             O[1] = resultSet.getObject(2);
             O[2] = resultSet.getObject(3);
             O[3] =Integer.parseInt( resultSet.getString(4));
            

              }
              STable.addRow(O);
              SearchMessage.setText("");
              
          
              
          }
          else
          {
            //  JOptionPane.showMessageDialog(null, "this movie does not exist");
              SearchMessage.setText("This video does not exist");
          }

        } catch (SQLException ex) {
            Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SearshFoeVideoTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
        try {


                prepStatement = connection.prepareStatement("select Rented from movier where MovieName = ?");
                prepStatement.setString(1, moviename.getText());
                resultSet = prepStatement.executeQuery();
                if(resultSet.next())
                {
                    String st= resultSet.getString("Rented");
                    if(st !=null || st=="true" || st!="false")
                    {
                     prepStatement.close();
                    resultSet.close();
                      prepStatement =connection.prepareStatement("update movier set rented='false',IDC=0,Cname='',returndate='',renteddate='' where MovieName=?");
                      prepStatement.setString(1, moviename.getText());
                      resultSet= prepStatement.executeQuery();
                   
                    int bR = JOptionPane.showConfirmDialog(null, "are u sure you want to return this movie");
                    if(bR==JOptionPane.YES_NO_OPTION)
                    {
                        connection.commit();
                    }
                    else
                    {
                        return;
                    }
                    }else
                    {
                        JOptionPane.showMessageDialog(null, "this movie already returned");
                    }
                  //  System.out.println(resultSet.getString(1));
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "this movie does not exist");
                }
            } catch (SQLException ex) {
                Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void customersearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customersearchActionPerformed
        try {
            DefaultTableModel TM = (DefaultTableModel)Customertable.getModel();
           Object t[] = new Object[9];
            prepStatement = connection.prepareStatement("select * from movier where Cname = ?");
             prepStatement.setString(1,customernametextfield.getText());
             resultSet = prepStatement.executeQuery();
            
             if(resultSet.next())
             {
                  String s = resultSet.getString("Cname");
                 if(s==null || s=="")
                     messageC.setText("Customer does not exist");
                // JOptionPane.showMessageDialog(null, "");
             
             else{
                 prepStatement.close();
                 resultSet.close();
                  prepStatement = connection.prepareStatement("select * from movier where Cname = ?");
             prepStatement.setString(1,customernametextfield.getText());
       //       prepStatement.clearBatch();
             resultSet = prepStatement.executeQuery();
             
             while(resultSet.next())
             {
                 t[0]=resultSet.getInt("IDC");
                 t[1]=resultSet.getString("CName");
                 t[2]=resultSet.getString("MovieNAme");
                 t[3]=resultSet.getString("Rented");
                 t[4]=resultSet.getString("renteddate");
                 t[5]=resultSet.getString("returndate");
                 t[6]=resultSet.getString("lengthm");
                 t[7]=resultSet.getString("Rated");
                  t[8]=resultSet.getString("categorys");
                 TM.addRow(t);
                   messageC.setText("");
                
             }

             }
             }
             else
             {
                   messageC.setText("Customer does not exist");

                 // JOptionPane.showMessageDialog(null, "Customer does not exist");
             }
        } catch (SQLException ex) {
            Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_customersearchActionPerformed

    private void DisplayAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayAActionPerformed
        try {
            prepStatement = connection.prepareStatement("select distinct * from movier");
            DefaultTableModel TM = (DefaultTableModel)DisplayTable.getModel();
            resultSet=prepStatement.executeQuery();
            Object t[] = new Object[9];
            while(resultSet.next())
             {
                 t[0]=resultSet.getInt("IDC");
                 t[1]=resultSet.getString("CName");
                 t[2]=resultSet.getString("MovieNAme");
                 t[3]=resultSet.getString("Rented");
                 t[4]=resultSet.getString("returndate");
                  t[5]=resultSet.getString("returndate");
                 t[6]=resultSet.getString("lengthm");
                 t[7]=resultSet.getString("Rated");
                  t[8]=resultSet.getString("categorys");
                 TM.addRow(t);
             }

        } catch (SQLException ex) {
            Logger.getLogger(MovieRental.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_DisplayAActionPerformed

    private void ClearDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearDActionPerformed
 DefaultTableModel TM = (DefaultTableModel)DisplayTable.getModel();
 int ro=TM.getRowCount();
        for(int i=0;i<ro;i++)
        {
            TM.removeRow(0);
        }
    }//GEN-LAST:event_ClearDActionPerformed

    private void ClearD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearD1ActionPerformed
       DefaultTableModel TM = (DefaultTableModel)STableV.getModel();
 int ro=TM.getRowCount();
        for(int i=0;i<ro;i++)
        {
            TM.removeRow(0);
        }
    }//GEN-LAST:event_ClearD1ActionPerformed

    private void ClearD2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearD2ActionPerformed
             DefaultTableModel TM = (DefaultTableModel)Customertable.getModel();
 int ro=TM.getRowCount();
        for(int i=0;i<ro;i++)
        {
            TM.removeRow(0);
        }
        customernametextfield.setText("");
    }//GEN-LAST:event_ClearD2ActionPerformed

    private void DateRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateRentActionPerformed
        if(DateRent.isSelected()){
        CustomerNameD.setEnabled(true);
DateOfRentalTextField1.setEnabled(true);
DateOfReturnTextField.setEnabled(true);
        }
        else
        {
             CustomerNameD.setEnabled(false);
                DateOfRentalTextField1.setEnabled(false);
                DateOfReturnTextField.setEnabled(false);
           
        }


    }//GEN-LAST:event_DateRentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieRental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieRental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieRental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieRental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieRental().setVisible(true);
            }
        });
    }

    public Connection getConnection() {
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            connection = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/orcl", "system", "manager");
            return connection;

        } catch (ClassNotFoundException e) {

        } catch (SQLException e) {

        }
        return null;
    }
    private Connection connection;
    private PreparedStatement prepStatement;
    private ResultSet resultSet;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AddNew;
    private javax.swing.JPanel AddPanel;
    private javax.swing.JButton BackD;
    private javax.swing.JButton BackD1;
    private javax.swing.JButton BackDis;
    private javax.swing.JButton BackRM;
    private javax.swing.JButton BackS;
    private javax.swing.JButton BackSFC;
    private javax.swing.JTextField CIDRental;
    private javax.swing.JLabel CNameLabel;
    private javax.swing.JTextField CNameRented1;
    private javax.swing.JButton CancelD;
    private javax.swing.JLabel Category;
    private javax.swing.JComboBox<String> CategoryItem;
    private javax.swing.JButton ClearD;
    private javax.swing.JButton ClearD1;
    private javax.swing.JButton ClearD2;
    private javax.swing.JTextField CustomerNameD;
    private javax.swing.JTable Customertable;
    private javax.swing.JLabel DMovieName;
    private javax.swing.JLabel DOfRental;
    private javax.swing.JLabel DRented;
    private javax.swing.JLabel DateOfRental;
    private javax.swing.JTextField DateOfRentalTF;
    private javax.swing.JTextField DateOfRentalTextField1;
    private javax.swing.JLabel DateOfReturn;
    private javax.swing.JTextField DateOfReturnTextField;
    private javax.swing.JLabel DateReleased;
    private javax.swing.JCheckBox DateRent;
    private javax.swing.JTextField DateRentedTF;
    private javax.swing.ButtonGroup DeleteButtonGroup;
    private javax.swing.JMenuItem DeleteOne;
    private javax.swing.JPanel DeletePanel;
    private javax.swing.JTextField DeleteTextField;
    private javax.swing.JButton DeleteV;
    private javax.swing.JMenuItem DiplayAll;
    private javax.swing.JButton DisplayA;
    private javax.swing.JPanel DisplayPanel;
    private javax.swing.JTable DisplayTable;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem Export;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem Import;
    private javax.swing.JLabel Length;
    private javax.swing.JTextField LengthTextField;
    private javax.swing.JTextField MNRented;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JTextField MovieNameTextField;
    private javax.swing.JPanel Movieinfo;
    private javax.swing.JLabel Moviename;
    private javax.swing.JMenu OperationMenu;
    private javax.swing.JLabel Rated;
    private javax.swing.JTextField RatedTextField;
    private javax.swing.JButton Rent;
    private javax.swing.JPanel RentPanel;
    private javax.swing.JMenuItem RentVideo;
    private javax.swing.JLabel RentedName;
    private javax.swing.JPanel RentedPanels;
    private javax.swing.JLabel RentedReturn;
    private javax.swing.JPanel ReturnPanel;
    private javax.swing.JTextField ReturnTF;
    private javax.swing.JMenuItem ReturnVideo;
    private javax.swing.JTable STableV;
    private javax.swing.JButton Saved3;
    private javax.swing.ButtonGroup SearchButtonGroup;
    private javax.swing.JLabel SearchMessage;
    private javax.swing.JPanel SearchPanel;
    private javax.swing.JTextField SearchTextField;
    private javax.swing.JPanel SearchforCustomerpanel;
    private javax.swing.JButton SearshFoeVideoTextField;
    private javax.swing.JMenuItem SearshForCustomer;
    private javax.swing.JMenuItem SearshForVideo;
    private javax.swing.JPanel StartPanel;
    private javax.swing.JPanel content;
    private javax.swing.JLabel customername;
    private javax.swing.JTextField customernametextfield;
    private javax.swing.JButton customersearch;
    private javax.swing.JPanel dateinfo;
    private javax.swing.JPanel information;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel messageC;
    private javax.swing.JTextField moviename;
    private javax.swing.JLabel movienamel;
    // End of variables declaration//GEN-END:variables
}
